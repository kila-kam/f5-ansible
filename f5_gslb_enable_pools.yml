---
- name: Mark up F5 GSLB pool member in dev
  hosts: dev_f5
  connection: local
  gather_facts: true

  tasks:
  - name: Get credentials
    set_fact:
      ansible_user: "{{ lookup ('env', 'ANSIBLE_NET_USERNAME') }}"
      ansible_password:  "{{ lookup ('env', 'ANSIBLE_NET_PASSWORD') }}"
    failed_when:
     - not ansible_user
     - not ansible_password 
    no_log: true
    tags: audit

  - name: Pull out resource variables from service definition
    set_fact:
      service_resources: "{{ next_definition }}"
    loop: "{{ dev_resource_definition }}"
    loop_control:
      loop_var: next_definition
    when: next_definition.name == "gtm_resource_group"
    tags: audit
 
  - name: Set condition for pool members 
    set_fact:
      datacentre: STC

  - name: Fail if no data found.
    fail:
      msg: "Failure due to no data found"
    when: service_resources is undefined
    tags: audit

  - name: Mark up f5 pools in dev
    block:
     - name: Check state of F5 device and set active device details
       include_role: 
         name: f5_single_device_manager_role

     - name: Mark GSLB pools up using REST
       include_role:
         name: f5_gslb_manager
       vars:
         partition: "{{ service_resources.partition }}"
         gslb_pool_name: "{{ next_gslb_pool_name }}"
         operation: enable
       loop: "{{ service_resources.gslb_pool_name }}"
       loop_control:
         loop_var: next_gslb_pool_name
       tags: change

     - name: Set facts for post validation 
       set_fact:
         parsed_post_gtm_pool_stats: "{{ parsed_post_gtm_pool_stats | default([]) }}"
 
     - name: Pull out post validation output 
       include_role:
         name: f5_gslb_manager
       vars:
         partition: "{{ service_resources.partition }}"
         gslb_pool_name: "{{ next_gslb_pool_name }}"
       loop: "{{ service_resources.gslb_pool_name }}"
       loop_control:
         loop_var: next_gslb_pool_name
       tags: audit
      
     - name: Verify that GSLB pool state is enabled
       assert:
         that:
           - "item['status.enabledState']['description'] == 'enabled'"
       when:
        - "datacentre | lower in item['vsName']['description'] or datacentre | upper in item['vsName']['description']"
        - "datacentre | lower in item['serverName']['description'] or datacentre | upper in item['serverName']['description']"
       loop:  "{{ parsed_post_gtm_pool_stats }}"

    rescue:
     - name: Activity log entry
       set_fact: 
         activity_log: "{{'Mark up failed for one of pools in - ' + service_resources.name }}"
       tags: audit 
    
     - name: Output activity log.
       fail:
         msg: "{{ activity_log }}"
       tags: audit 